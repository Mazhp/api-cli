#!/usr/bin/env node
const program = require("commander");
const request = require("request");
const chalk = require("chalk");
const logger = require("../lib/logger");
const setting = require("../lib/setting");
const db = require("../lib/dbinit");

const serverHost = setting.serverHost();

// 查找项目
program
  .command("list [project-name]")
  .description("display project list")
  .action(function(projectName) {
    const url = projectName
      ? `${serverHost}/projects?identity=${projectName}`
      : `${serverHost}/projects`;
    request(url, function(error, response, body) {
      if (error) {
        logger.fatal(error);
      }
      if (!error && response.statusCode === 200) {
        body = JSON.parse(body);
        //如果是查询所有项目,存储他们，作为后面命名检查使用
        if (url.indexOf("identity") === -1) {
          storeAllProject(body.data);
        }
        logger.success(body.data);
      }
    });
  });

/**
 * 存储所有被代理项目
 */
function storeAllProject(projects) {
  const projectIdentities = [];
  for (const project of projects) {
    projectIdentities.push(project.identity);
  }
  db.set("projects", projectIdentities).write();
}

// 添加项目
program
  .command("add <project-name> <host>")
  .description("add a project")
  .option("-n, --name [name]", "project chinese name")
  .action(function(projectName, host, cmd) {
    request(
      {
        url: `${serverHost}/projects`,
        method: "POST",
        form: { identity: projectName, name: cmd.name, target: host }
      },
      function(error, response, body) {
        if (error) {
          logger.fatal(error);
        }
        if (!error && response.statusCode === 200) {
          body = JSON.parse(body);
          logger.success(body.data);
        }
      }
    );
  });

// 修改项目信息
program
  .command("set <project-name>")
  .description("set product info")
  .option("-n, --name [name]", "project chinese name")
  .option("-h, --host [host]", "project host")
  .option("-s, --status [status]", "project proxy open status")
  .action(function(projectName, cmd) {
    const { name, host, status } = cmd;
    request(
      {
        url: `${serverHost}/projects`,
        method: "PUT",
        form: { identity: projectName, name, host, status }
      },
      function(error, response, body) {
        if (error) {
          logger.fatal(error);
        }
        if (!error && response.statusCode === 200) {
          body = JSON.parse(body);
          logger.success(body.data);
        }
      }
    );
  });

// 设置使用某个项目
program
  .command("use <project-name>")
  .description("use someone project")
  .action(function(projectName) {
    const allProjects = db.get("projects").value();
    if (
      allProjects &&
      allProjects.length &&
      allProjects.indexOf(projectName) === -1
    ) {
      logger.fatal(
        "used project %s doesn't exist.existing projects:%j",
        projectName,
        allProjects
      );
      return;
    }
    db.set("workProject", projectName).write();
    logger.success("used project success.current work project:%s", projectName);
  });

// 显示当前工作项目
program
  .command("work")
  .description("show work project")
  .action(function() {
    logger.success("current work project:%s", db.get("workProject").value());
  });

program.parse(process.argv);
